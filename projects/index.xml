<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on CoffeeNet</title>
    <link>https://coffeenet.rocks/projects/</link>
    <description>Recent content in Projects on CoffeeNet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://coffeenet.rocks/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CoffeeNet - Starter Discovery</title>
      <link>https://coffeenet.rocks/projects/starter-discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/starter-discovery/</guid>
      <description>CoffeeNet Starter - Discovery This CoffeeNet starter configures the service discovery for your application, provides your application as client to the discovery service and offers already known clients to you by the coffee.synyx.autoconfigure.discovery.service.CoffeeNetAppService.
Getting started This is a module in the starter set, so you first need to declare your project as a child of the starter parent by editing the pom.xml file.
&amp;lt;parent&amp;gt; &amp;lt;groupId&amp;gt;coffee.synyx&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;coffeenet-starter-parent&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${parent.version}&amp;lt;/version&amp;gt; &amp;lt;relativePath /&amp;gt; &amp;lt;/parent&amp;gt;  and adding the repository to receive the dependencies</description>
    </item>
    
    <item>
      <title>CoffeeNet - Starter Logging</title>
      <link>https://coffeenet.rocks/projects/starter-logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/starter-logging/</guid>
      <description>CoffeeNet Starter - Logging This CoffeeNet starter configures a consistent logging format and behaviour through all of your CoffeeNet applications.
Getting started This is a module in the starter set, so you first need to declare your project as a child of the starter parent by editing the pom.xml file.
&amp;lt;parent&amp;gt; &amp;lt;groupId&amp;gt;coffee.synyx&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;coffeenet-starter-parent&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${parent.version}&amp;lt;/version&amp;gt; &amp;lt;relativePath /&amp;gt; &amp;lt;/parent&amp;gt;  and adding the repository to receive the dependencies
&amp;lt;repositories&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;releases.public.nexus.synyx.de&amp;lt;/id&amp;gt; &amp;lt;url&amp;gt;http://nexus.</description>
    </item>
    
    <item>
      <title>CoffeeNet - Starter Monitoring</title>
      <link>https://coffeenet.rocks/projects/starter-monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/starter-monitoring/</guid>
      <description>CoffeeNet Starter - Monitoring This CoffeeNet starter is designed to add information to the
/health endpoint about the status of CoffeeNet services like
the Auth Server depending on the starters that are used in the project.
If you use the coffeenet-security-starter with the integration profile
then a check against the configured Auth Server will be done to see if the Auth Server is available and your project should work correctly</description>
    </item>
    
    <item>
      <title>CoffeeNet - Starter Navigation Javascript</title>
      <link>https://coffeenet.rocks/projects/starter-navigation-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/starter-navigation-javascript/</guid>
      <description>CoffeeNet Starter Navigation Javascript This CoffeeNet starter is dedicated to provide a simple and easy way to integrate the CoffeeNet web navigation behaviour with javascript as your rendering engine.
Getting started This is a module in the starter set, so you first need to declare your project as a child of the starter parent by editing the pom.xml file.
&amp;lt;parent&amp;gt; &amp;lt;groupId&amp;gt;coffee.synyx&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;coffeenet-starter-parent&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${parent.version}&amp;lt;/version&amp;gt; &amp;lt;relativePath /&amp;gt; &amp;lt;/parent&amp;gt;  and adding the repository to receive the dependencies</description>
    </item>
    
    <item>
      <title>CoffeeNet - Starter Navigation Thymeleaf</title>
      <link>https://coffeenet.rocks/projects/starter-navigation-thymeleaf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/starter-navigation-thymeleaf/</guid>
      <description>CoffeeNet Starter Navigation Thymeleaf This CoffeeNet starter is dedicated to provide a simple and easy way to integrate the CoffeeNet navigation behaviour with thymeleaf 2 into your application.
Getting started This is a module in the starter set, so you first need to declare your project as a child of the starter parent by editing the pom.xml file.
&amp;lt;parent&amp;gt; &amp;lt;groupId&amp;gt;coffee.synyx&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;coffeenet-starter-parent&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${parent.version}&amp;lt;/version&amp;gt; &amp;lt;relativePath /&amp;gt; &amp;lt;/parent&amp;gt;  and adding the repository to receive the dependencies</description>
    </item>
    
    <item>
      <title>CoffeeNet - Starter security</title>
      <link>https://coffeenet.rocks/projects/starter-security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/starter-security/</guid>
      <description>CoffeeNet Starters These projects contains all CoffeeNet starters, which can be used to integrate an application into the CoffeeNet.
Security provides the authentication against the CoffeeNet auth server.
Service Discovery provides the integration to dustribute and search of CoffeeNet applications.
Logging provides a consistent and centralised logging.
Monitoring provides information about the service.
Navigation Thymleaf provides the server side rendering of the navigation bar via thymeleaf.
Navigation Javascript provides client side rendering of the navigation bar with javasript.</description>
    </item>
    
    <item>
      <title>CoffeeNet - Auth Server</title>
      <link>https://coffeenet.rocks/projects/auth-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/auth-server/</guid>
      <description>CoffeeNet Auth Server The CoffeeNet Auth Server is an OAuth2 provider to achieve single sign-on for the CoffeeNet. It authenticates against a LDAP-Server. See how to configure LDAP To use the Auth-Server in your application, see README of CoffeeNet Starter Security.
Configuration Developer Mode The Auth-Server can be started in developer mode by setting the property auth.development to true. By doing this, a default client is created during startup.</description>
    </item>
    
    <item>
      <title>CoffeeNet - Config Server</title>
      <link>https://coffeenet.rocks/projects/config-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/config-server/</guid>
      <description>CoffeeNet Config Server The CoffeeNet Config Server is based on spring-cloud-config-server that is wrapped around with the CoffeeNet infrastructure like logging and discovery.
Configuration Please take a look at https://cloud.spring.io/spring-cloud-config/spring-cloud-config.html
Public Key If the authorization server will sign the JWT with his private key this application needs the public key to verify the signature.
config-server: keystore: enabled: false public-key: &#39;file:coffeenet-public.cert&#39;  You can also lay it on the classpath (classpath:) or use a relative path.</description>
    </item>
    
    <item>
      <title>CoffeeNet - Discovery Server</title>
      <link>https://coffeenet.rocks/projects/discovery-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/discovery-server/</guid>
      <description> 
CoffeeNet Service Discovery How to use Development ./mvnw clean spring-boot:run  </description>
    </item>
    
    <item>
      <title>CoffeeNet - Frontpage</title>
      <link>https://coffeenet.rocks/projects/frontpage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/frontpage/</guid>
      <description>CoffeeNet Frontpage the personalisable frontpage of the CoffeeNet The CoffeeNet Frontpage is a personalisable landingpage, which uses a plugin based mechanism for adding widgets like feeds, clock or isLieb-comic. You can write your own plugin and intregrate with the frontpage.
Requirements  Java 8 Docker 17.06.0+ Docker Compose 1.20.x  Development Start application and environment (MongoDB) is used for persistence)
docker-compose up ./mvnw clean spring-boot:run  Spring Boot DevTools are also included for inflight changes.</description>
    </item>
    
    <item>
      <title>CoffeeNet - Example of the CoffeeNet architecture</title>
      <link>https://coffeenet.rocks/projects/coffeenet-dockerized/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coffeenet.rocks/projects/coffeenet-dockerized/</guid>
      <description>CoffeeNet Dockerized This projects provides all necessary information about the
CoffeeNet structure and the services for an easy startup.
When you run the docker-compose.yml file as describes below
a complete CoffeeNet system will be provided that consists of:
The Core of the CoffeeNet: - CoffeeNet Auth Server (http://localhost:9999) - Coffeenet Discovery Server (http://localhost:8761) - Coffeenet Config Server (http://localhost:8888)
Optional Central Services of the CoffeeNet:
For additional centralized logging we use graylog, that plays together with</description>
    </item>
    
  </channel>
</rss>